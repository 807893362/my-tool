<?xml version="1.0" encoding="UTF-8"?>
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!--Configuration后面的status,这个用于设置log4j2自身内部的信息输出,可以不设置,当设置成trace时,你会看到log4j2内部各种详细输出-->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身,设置间隔秒数-->
<Configuration status="WARN" monitorInterval="10">
    <Properties>
        <!-- Info日志默认同一文件夹下可以存放的数量,不设置此属性则默认为7个 -->
        <property name="info_max">500</property>
        <!-- Error日志默认同一文件夹下可以存放的数量,不设置此属性则默认为7个 -->
        <property name="error_max">500</property>
        <!-- 配置日志文件输出目录 -->
        <Property name="logLevel">${ctx:logLevel:-DEBUG}</Property>
        <Property name="logPath">${ctx:logPath:-/data/logs/prometheus}</Property>
    </Properties>
    <!--定义appender -->
    <Appenders>
        <Console name="Console" target="SYSTEM_OUT">
            <!--输出日志的格式-->
            <PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss:SSS} %p [%t] %m%n"/>
            <!--控制台只输出level及其以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
            <ThresholdFilter level="${logLevel}" onMatch="ACCEPT" onMismatch="DENY"/>
        </Console>
        <RollingFile name="STDOUT" fileName="${logPath}/stdout.log" filePattern="${logPath}/stdout.log.%d{yyyyMMddHH}" immediateFlush="false">
            <PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss:SSS} [%p] [%X{trace}] %m%n"/>
            <Policies>
                <TimeBasedTriggeringPolicy/>
            </Policies>
            <DefaultRolloverStrategy max="${info_max}" />
            <ThresholdFilter level="${logLevel}" onMatch="ACCEPT" onMismatch="DENY"/>
        </RollingFile>
        <RollingFile name="STDERR" fileName="${logPath}/stderr.log" filePattern="${logPath}/stderr.log.%d{yyyyMMdd}" immediateFlush="false">
            <PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss:SSS} [%p] [%X{trace}] %m%n"/>
            <Policies>
                <TimeBasedTriggeringPolicy/>
            </Policies>
            <DefaultRolloverStrategy max="${error_max}" />
            <ThresholdFilter level="ERROR" onMatch="ACCEPT" onMismatch="DENY"/>
        </RollingFile>
    </Appenders>

    <!--定义logger,只有定义了logger并引入的appender,appender才会生效-->
    <Loggers>
        <Logger name="org" level="INFO" />
        <Logger name="io" level="INFO" />
        <Logger name="com.alibaba" level="INFO" />
        <Logger name="com.zaxxer" level="INFO" />

        <logger name="org.apache" level="INFO"/>
        <Logger name="org.springframework" level="INFO" />
        <Logger name="org.springframework.test" level="INFO" />
        <!--建立一个默认的root的logger-->
        <Root level="${logLevel}"  includeLocation="true">
            <appender-ref ref="Console"/>
            <appender-ref ref="STDOUT"/>
            <appender-ref ref="STDERR"/>
        </Root>
    </Loggers>
</Configuration>